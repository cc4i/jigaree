// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: weather.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CityWeatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *CityWeatherRequest) Reset() {
	*x = CityWeatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityWeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityWeatherRequest) ProtoMessage() {}

func (x *CityWeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityWeatherRequest.ProtoReflect.Descriptor instead.
func (*CityWeatherRequest) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{0}
}

func (x *CityWeatherRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

// The weather.
type CityWeatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City          string  `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Region        string  `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Country       string  `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Tz            string  `protobuf:"bytes,4,opt,name=tz,proto3" json:"tz,omitempty"`
	Localtime     int32   `protobuf:"varint,5,opt,name=localtime,proto3" json:"localtime,omitempty"`
	LastUpdate    int32   `protobuf:"varint,6,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	ConditionText string  `protobuf:"bytes,7,opt,name=conditionText,proto3" json:"conditionText,omitempty"`
	ConditionIcon string  `protobuf:"bytes,8,opt,name=conditionIcon,proto3" json:"conditionIcon,omitempty"`
	WindKph       float32 `protobuf:"fixed32,10,opt,name=windKph,proto3" json:"windKph,omitempty"`
	WindDegree    float32 `protobuf:"fixed32,11,opt,name=windDegree,proto3" json:"windDegree,omitempty"`
	WindDir       string  `protobuf:"bytes,12,opt,name=windDir,proto3" json:"windDir,omitempty"`
	PressureMb    float32 `protobuf:"fixed32,13,opt,name=pressureMb,proto3" json:"pressureMb,omitempty"`
	PressureIn    float32 `protobuf:"fixed32,14,opt,name=pressureIn,proto3" json:"pressureIn,omitempty"`
	PrecipMm      float32 `protobuf:"fixed32,15,opt,name=precipMm,proto3" json:"precipMm,omitempty"`
	PrecipIn      float32 `protobuf:"fixed32,16,opt,name=precipIn,proto3" json:"precipIn,omitempty"`
	Humidity      float32 `protobuf:"fixed32,17,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Cloud         float32 `protobuf:"fixed32,18,opt,name=cloud,proto3" json:"cloud,omitempty"`
	FeelslikeC    float32 `protobuf:"fixed32,19,opt,name=feelslikeC,proto3" json:"feelslikeC,omitempty"`
	VisKm         float32 `protobuf:"fixed32,21,opt,name=visKm,proto3" json:"visKm,omitempty"`
	Uv            float32 `protobuf:"fixed32,23,opt,name=uv,proto3" json:"uv,omitempty"`
	GustKph       float32 `protobuf:"fixed32,24,opt,name=gustKph,proto3" json:"gustKph,omitempty"`
}

func (x *CityWeatherResponse) Reset() {
	*x = CityWeatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityWeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityWeatherResponse) ProtoMessage() {}

func (x *CityWeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityWeatherResponse.ProtoReflect.Descriptor instead.
func (*CityWeatherResponse) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{1}
}

func (x *CityWeatherResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CityWeatherResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CityWeatherResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CityWeatherResponse) GetTz() string {
	if x != nil {
		return x.Tz
	}
	return ""
}

func (x *CityWeatherResponse) GetLocaltime() int32 {
	if x != nil {
		return x.Localtime
	}
	return 0
}

func (x *CityWeatherResponse) GetLastUpdate() int32 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *CityWeatherResponse) GetConditionText() string {
	if x != nil {
		return x.ConditionText
	}
	return ""
}

func (x *CityWeatherResponse) GetConditionIcon() string {
	if x != nil {
		return x.ConditionIcon
	}
	return ""
}

func (x *CityWeatherResponse) GetWindKph() float32 {
	if x != nil {
		return x.WindKph
	}
	return 0
}

func (x *CityWeatherResponse) GetWindDegree() float32 {
	if x != nil {
		return x.WindDegree
	}
	return 0
}

func (x *CityWeatherResponse) GetWindDir() string {
	if x != nil {
		return x.WindDir
	}
	return ""
}

func (x *CityWeatherResponse) GetPressureMb() float32 {
	if x != nil {
		return x.PressureMb
	}
	return 0
}

func (x *CityWeatherResponse) GetPressureIn() float32 {
	if x != nil {
		return x.PressureIn
	}
	return 0
}

func (x *CityWeatherResponse) GetPrecipMm() float32 {
	if x != nil {
		return x.PrecipMm
	}
	return 0
}

func (x *CityWeatherResponse) GetPrecipIn() float32 {
	if x != nil {
		return x.PrecipIn
	}
	return 0
}

func (x *CityWeatherResponse) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *CityWeatherResponse) GetCloud() float32 {
	if x != nil {
		return x.Cloud
	}
	return 0
}

func (x *CityWeatherResponse) GetFeelslikeC() float32 {
	if x != nil {
		return x.FeelslikeC
	}
	return 0
}

func (x *CityWeatherResponse) GetVisKm() float32 {
	if x != nil {
		return x.VisKm
	}
	return 0
}

func (x *CityWeatherResponse) GetUv() float32 {
	if x != nil {
		return x.Uv
	}
	return 0
}

func (x *CityWeatherResponse) GetGustKph() float32 {
	if x != nil {
		return x.GustKph
	}
	return 0
}

var File_weather_proto protoreflect.FileDescriptor

var file_weather_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x69, 0x74, 0x79,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x22, 0xd3, 0x04, 0x0a, 0x13, 0x43, 0x69, 0x74, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x7a,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69,
	0x6e, 0x64, 0x4b, 0x70, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x77, 0x69, 0x6e,
	0x64, 0x4b, 0x70, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x62, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x62, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x4d, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x4d, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x49, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x6c,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x65,
	0x65, 0x6c, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x73, 0x4b,
	0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x69, 0x73, 0x4b, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x75, 0x76, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x75, 0x76, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x75, 0x73, 0x74, 0x4b, 0x70, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x67, 0x75, 0x73, 0x74, 0x4b, 0x70, 0x68, 0x32, 0x5e, 0x0a, 0x0e, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x62, 0x79, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x2e, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_weather_proto_rawDescOnce sync.Once
	file_weather_proto_rawDescData = file_weather_proto_rawDesc
)

func file_weather_proto_rawDescGZIP() []byte {
	file_weather_proto_rawDescOnce.Do(func() {
		file_weather_proto_rawDescData = protoimpl.X.CompressGZIP(file_weather_proto_rawDescData)
	})
	return file_weather_proto_rawDescData
}

var file_weather_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_weather_proto_goTypes = []interface{}{
	(*CityWeatherRequest)(nil),  // 0: weather.CityWeatherRequest
	(*CityWeatherResponse)(nil), // 1: weather.CityWeatherResponse
}
var file_weather_proto_depIdxs = []int32{
	0, // 0: weather.WeatherService.WeatherbyCity:input_type -> weather.CityWeatherRequest
	1, // 1: weather.WeatherService.WeatherbyCity:output_type -> weather.CityWeatherResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_weather_proto_init() }
func file_weather_proto_init() {
	if File_weather_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_weather_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityWeatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityWeatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_weather_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_weather_proto_goTypes,
		DependencyIndexes: file_weather_proto_depIdxs,
		MessageInfos:      file_weather_proto_msgTypes,
	}.Build()
	File_weather_proto = out.File
	file_weather_proto_rawDesc = nil
	file_weather_proto_goTypes = nil
	file_weather_proto_depIdxs = nil
}
